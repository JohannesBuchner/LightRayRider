# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '42 4 5,20 * *'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install test dependencies
      run: python -m pip install matplotlib "numpy<2" cython setuptools scipy flake8 pycodestyle pydocstyle pytest coverage 'coverage_lcov[extras] @ git+https://github.com/JohannesBuchner/coverage-lcov@feature-coverage7' toml

    - name: Install package
      run: python -m pip install .

    - name: Lint with flake8
      run: flake8 lightrayrider/*.py

    - name: Check code style
      run: pycodestyle lightrayrider/*.py lightrayrider/*.pyx

    - name: Check doc style
      run: pydocstyle lightrayrider/*.py lightrayrider/*.pyx
    
    - name: Test package
      run: python3 -m coverage run example/geometricnh.py

    - name: Build locally
      run: python3 setup.py build_ext --inplace

    - name: Test with pytest
      run: python3 -m coverage run -a -m pytest

    - name: Convert coverage output to lcov for coveralls
      run: |
        coverage-lcov
        # make paths relative
        sed -i s,$PWD/,,g lcov.info
    - name: prepare coveralls partial upload
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: lcov.info
        flag-name: run-${{ matrix.python-version }}
        parallel: true

  finish:
    needs: build
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
        carryforward: "run-1,run-2"
